<?php

namespace AppBundle\Repository;

/**
 * EbookRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EbookRepository extends \Doctrine\ORM\EntityRepository
{
    public function addActiveQuery(QueryBuilder $qb = null) {
        $em = $this->getEntityManager();

        if (is_null($qb)) {
            $qb = $em->createQueryBuilder();
        }

        $qb->select(array('e'))
            ->from('AppBundle:Ebook', 'e');

        return $qb;
    }

    public function getInscritiptionEbook($user, $status = null)
    {
        $qb = $this->addActiveQuery();

        $qb->join('e.inscriptions', 'i')
          ->andWhere('i.user = :user')
          ->setParameter('user', $user);

        if($status!=null){
          $qb->andWhere("i.inscription_status = :status")
          ->setParameter("status", $status);
        }

        return $qb->getQuery()->getResult();
    }

    public function findForSearch($query)
    {
        $qb = $this->addActiveQuery();

        $qb->andWhere($qb->expr()->like($qb->expr()->lower('e.name'), ':query'))
          ->orWhere($qb->expr()->like($qb->expr()->lower('e.description'), ':query'))
          ->setParameter(':query', "%" . strtolower($query) . "%");


        return $qb->getQuery()->getResult();
    }

    public function getEbooksHome()
    {
        $qb = $this->addActiveQuery();

        $qb->andWhere('e.course is null');

        return $qb->getQuery()->getResult();
    }
}
